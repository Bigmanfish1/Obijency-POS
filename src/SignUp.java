import java.util.*;
import java.awt.Color;
import java.time.LocalDateTime;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import javax.swing.JTextField;
import java.util.concurrent.TimeUnit;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author victorg
 */
public class SignUp extends javax.swing.JFrame {

    /**
     * Creates new form SignUp
     */
    public SignUp() {
        initComponents();
    }
    DatabaseConnection db = new DatabaseConnection();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCompanyName = new javax.swing.JLabel();
        txtName = new java.awt.TextField();
        txtSurname = new java.awt.TextField();
        txtUsername = new java.awt.TextField();
        btnSignUp = new javax.swing.JButton();
        btnCancelSignUp = new javax.swing.JButton();
        lblName = new javax.swing.JLabel();
        lblSurname = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        txtPassword = new java.awt.TextField();
        txtConfirmPassword = new java.awt.TextField();
        llblConfirmPassword = new javax.swing.JLabel();
        lblNameValidity = new javax.swing.JLabel();
        lblSurnameValidity = new javax.swing.JLabel();
        lblUsernameValidity = new javax.swing.JLabel();
        lblPasswordValidity = new javax.swing.JLabel();
        lblConfirmPasswordValidity = new javax.swing.JLabel();
        btnHelp = new javax.swing.JButton();
        btnSignIn = new javax.swing.JButton();
        lblDOBSignUp = new javax.swing.JLabel();
        dcDateOfBirth = new com.toedter.calendar.JDateChooser();
        lblDateValidity = new javax.swing.JLabel();
        lblAllValid = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 204));

        lblCompanyName.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lblCompanyName.setText("OBIJENCY FOOD STUFF");

        txtName.setText("Enter your Name");
        txtName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtNameMouseClicked(evt);
            }
        });
        txtName.addHierarchyListener(new java.awt.event.HierarchyListener() {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt) {
                txtNameHierarchyChanged(evt);
            }
        });
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        txtSurname.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtSurname.setText("Enter your Surname");
        txtSurname.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtSurnameMouseClicked(evt);
            }
        });

        txtUsername.setText("Enter A Username");
        txtUsername.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtUsernameMouseClicked(evt);
            }
        });

        btnSignUp.setText("SIGN UP");
        btnSignUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSignUpActionPerformed(evt);
            }
        });

        btnCancelSignUp.setText("CANCEL");
        btnCancelSignUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelSignUpActionPerformed(evt);
            }
        });

        lblName.setText("NAME:");

        lblSurname.setText("SURNAME:");

        lblUsername.setText("USERNAME:");

        lblPassword.setText("PASSWORD:");

        txtPassword.setText("Enter A Password");
        txtPassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtPasswordMouseClicked(evt);
            }
        });

        txtConfirmPassword.setText("Confirm Your Password");
        txtConfirmPassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtConfirmPasswordMouseClicked(evt);
            }
        });

        llblConfirmPassword.setText("CONFIRM PASSWORD:");

        btnHelp.setText("HELP");
        btnHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHelpActionPerformed(evt);
            }
        });

        btnSignIn.setText("SIGN IN");
        btnSignIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSignInActionPerformed(evt);
            }
        });

        lblDOBSignUp.setText("DATE OF BIRTH:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(143, 143, 143)
                .addComponent(lblCompanyName, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCancelSignUp)
                        .addGap(81, 81, 81)
                        .addComponent(btnSignIn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, Short.MAX_VALUE)
                        .addComponent(btnSignUp))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblSurname, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(llblConfirmPassword)
                            .addComponent(lblDOBSignUp))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                            .addComponent(txtConfirmPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                            .addComponent(txtUsername, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                            .addComponent(txtSurname, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                            .addComponent(txtName, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                            .addComponent(dcDateOfBirth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(102, 102, 102)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblNameValidity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblSurnameValidity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblUsernameValidity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblPasswordValidity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblConfirmPasswordValidity, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                    .addComponent(btnHelp, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                    .addComponent(lblDateValidity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(118, 118, 118))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblAllValid, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(155, 155, 155))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblCompanyName)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblNameValidity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtName, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(lblName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblSurnameValidity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblSurname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtSurname, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblUsernameValidity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtUsername, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(lblUsername, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblPasswordValidity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(lblPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtConfirmPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(llblConfirmPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblConfirmPasswordValidity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblDOBSignUp, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                    .addComponent(dcDateOfBirth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblDateValidity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelSignUp)
                    .addComponent(btnSignIn)
                    .addComponent(btnSignUp)
                    .addComponent(btnHelp))
                .addGap(18, 18, 18)
                .addComponent(lblAllValid, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtNameMouseClicked
        txtName.setText(null);
    }//GEN-LAST:event_txtNameMouseClicked

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtNameHierarchyChanged(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_txtNameHierarchyChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameHierarchyChanged

    private void txtSurnameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtSurnameMouseClicked
        txtSurname.setText(null);
    }//GEN-LAST:event_txtSurnameMouseClicked

    private void txtUsernameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtUsernameMouseClicked
        txtUsername.setText(null);
    }//GEN-LAST:event_txtUsernameMouseClicked

    private void txtPasswordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPasswordMouseClicked
        txtPassword.setText(null);
    }//GEN-LAST:event_txtPasswordMouseClicked

    private void txtConfirmPasswordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtConfirmPasswordMouseClicked
        txtConfirmPassword.setText(null);
    }//GEN-LAST:event_txtConfirmPasswordMouseClicked

    private void btnSignInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSignInActionPerformed
        SignIn sdd = new SignIn();
        sdd.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnSignInActionPerformed

    private void btnCancelSignUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelSignUpActionPerformed
        txtName.setText("Enter your Name");
        txtName.setBackground(Color.WHITE);
        txtSurname.setText("Enter your Surname");
        txtSurname.setBackground(Color.WHITE);
        txtUsername.setText("Enter a Username");
        txtUsername.setBackground(Color.WHITE);
        txtPassword.setText("Enter a Password");
        txtPassword.setBackground(Color.WHITE);
        txtConfirmPassword.setText("Confirm your Password");
        txtConfirmPassword.setBackground(Color.WHITE);
        dcDateOfBirth.setDate(null);
        Color defaultC = new Color(204,204,255);
        dcDateOfBirth.setBackground(defaultC);
        lblNameValidity.setText(null);
        lblSurnameValidity.setText(null);
        lblUsernameValidity.setText(null);
        lblPasswordValidity.setText(null);
        lblConfirmPasswordValidity.setText(null);
        lblDateValidity.setText(null);
    }//GEN-LAST:event_btnCancelSignUpActionPerformed

    private void btnHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHelpActionPerformed
        HelpSignUp hsu = new HelpSignUp();
        hsu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnHelpActionPerformed

    private void btnSignUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSignUpActionPerformed
        String n = txtName.getText();
        
        if(n.trim().isEmpty() || (n.equalsIgnoreCase("Enter your Name"))){
            lblNameValidity.setForeground(Color.red);
            txtName.setBackground(Color.red);
            lblNameValidity.setText("INVALID");
        }
        else{
            Boolean state = db.validateSignUpName(n);
            if(state == true){
                lblNameValidity.setForeground(Color.red);
                txtName.setBackground(Color.red);
                lblNameValidity.setText("INVALID");
            }
            else
            if(state == false){
                lblNameValidity.setForeground(Color.GREEN);
                txtName.setBackground(Color.GREEN);
                lblNameValidity.setText("VALID");
            }
        }
        
        String s = txtSurname.getText();
        
        if(s.trim().isEmpty() || (s.equalsIgnoreCase("Enter your Surname"))){
            lblSurnameValidity.setForeground(Color.red);
            txtSurname.setBackground(Color.red);
            lblSurnameValidity.setText("INVALID");
        }
        else{
            Boolean stateS = db.validateSignUpSurname(s);
            
            if(stateS == true){
                lblSurnameValidity.setForeground(Color.red);
                txtSurname.setBackground(Color.red);
                lblSurnameValidity.setText("INVALID");
            }
            else
            if(stateS == false){
                lblSurnameValidity.setForeground(Color.GREEN);
                txtSurname.setBackground(Color.GREEN);
                lblSurnameValidity.setText("VALID");
            }
        }
        
        String ps = txtPassword.getText();
        String confirmPs = txtConfirmPassword.getText();
        
        
        if(ps.trim().isEmpty()){
            lblPasswordValidity.setForeground(Color.red);
                txtPassword.setBackground(Color.red);
                lblPasswordValidity.setText("INVALID");
        }
        
        if(confirmPs.trim().isEmpty()){
            lblConfirmPasswordValidity.setForeground(Color.red);
                txtConfirmPassword.setBackground(Color.red);
                lblConfirmPasswordValidity.setText("INVALID");
        }
        
        if(!(ps.trim().isEmpty()) && !(confirmPs.trim().isEmpty())){
            Boolean match = db.validatePassword(ps, confirmPs);
            if(match == true){
                lblPasswordValidity.setForeground(Color.green);
                txtPassword.setBackground(Color.green);
                lblPasswordValidity.setText("VALID");
                lblConfirmPasswordValidity.setForeground(Color.green);
                txtConfirmPassword.setBackground(Color.green);
                lblConfirmPasswordValidity.setText("VALID");
            }
            else{
                lblPasswordValidity.setForeground(Color.red);
                txtPassword.setBackground(Color.red);
                lblPasswordValidity.setText("INVALID");
                lblConfirmPasswordValidity.setForeground(Color.red);
                txtConfirmPassword.setBackground(Color.red);
                lblConfirmPasswordValidity.setText("INVALID");
            }
        }
        
        String date = ((JTextField)dcDateOfBirth.getDateEditor().getUiComponent()).getText();
        
        if(date.trim().isEmpty()){
            dcDateOfBirth.setBackground(Color.red);
            lblDateValidity.setForeground(Color.red);
            lblDateValidity.setText("INVALID");
        }
        else{
            dcDateOfBirth.setBackground(Color.green);
            lblDateValidity.setForeground(Color.green);
            lblDateValidity.setText("VALID");
        }
        
        String un = txtUsername.getText();
         if(un.trim().isEmpty() || (un.equalsIgnoreCase("Enter A Username"))){
            lblUsernameValidity.setForeground(Color.red);
            txtUsername.setBackground(Color.red);
            lblUsernameValidity.setText("INVALID");
        }
        else{
            Boolean matchUn = db.validateUsername(un);
            if(matchUn == true){
                lblUsernameValidity.setForeground(Color.red);
                txtUsername.setBackground(Color.red);
                lblUsernameValidity.setText("INVALID");
            }
            else
            if(matchUn == false){
                lblUsernameValidity.setForeground(Color.GREEN);
                txtUsername.setBackground(Color.GREEN);
                lblUsernameValidity.setText("VALID");
            }
        }
        String timeStamp = new SimpleDateFormat("yyyyMMdd_HHmmss").format(Calendar.getInstance().getTime());
        if(lblNameValidity.getText().equals("VALID") &&
                lblSurnameValidity.getText().equals("VALID") &&
                lblUsernameValidity.getText().equals("VALID") 
                && lblPasswordValidity.getText().equals("VALID")
                && lblConfirmPasswordValidity.getText().equals("VALID") && 
                lblDateValidity.getText().equals("VALID")){
            lblAllValid.setText("All the information is valid so you can now "
                    + "go to the sign-in page");
            db.addUser(n, s, "employee", date, un, ps);
        }
        
        
    }//GEN-LAST:event_btnSignUpActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SignUp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelSignUp;
    private javax.swing.JButton btnHelp;
    private javax.swing.JButton btnSignIn;
    private javax.swing.JButton btnSignUp;
    private com.toedter.calendar.JDateChooser dcDateOfBirth;
    private javax.swing.JLabel lblAllValid;
    private javax.swing.JLabel lblCompanyName;
    private javax.swing.JLabel lblConfirmPasswordValidity;
    private javax.swing.JLabel lblDOBSignUp;
    private javax.swing.JLabel lblDateValidity;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblNameValidity;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPasswordValidity;
    private javax.swing.JLabel lblSurname;
    private javax.swing.JLabel lblSurnameValidity;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JLabel lblUsernameValidity;
    private javax.swing.JLabel llblConfirmPassword;
    private java.awt.TextField txtConfirmPassword;
    private java.awt.TextField txtName;
    private java.awt.TextField txtPassword;
    private java.awt.TextField txtSurname;
    private java.awt.TextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
