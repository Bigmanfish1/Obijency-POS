import java.sql.ResultSet;
import javax.swing.JTextField;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author victorg
 */
public class TransactionHistory extends javax.swing.JFrame {

    /**
     * Creates new form TransactionHistory
     */
    public TransactionHistory() {
        initComponents();
        DatabaseConnection db = new DatabaseConnection();
        ResultSet rs = db.displayTransactionHistory();
        tblTransactionHistory.setModel(DbUtils.resultSetToTableModel(rs));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCompanyNameTransactionHistory = new javax.swing.JLabel();
        lblHeadingTransactionHistory = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTransactionHistory = new javax.swing.JTable();
        btnTransactionhistoryMainMenu = new javax.swing.JButton();
        btnTransactionHistoryHelp = new javax.swing.JButton();
        lblDateChooserFrom = new javax.swing.JLabel();
        lblSortAmount = new javax.swing.JLabel();
        cmboSortAmount = new javax.swing.JComboBox();
        dcDateFrom = new com.toedter.calendar.JDateChooser();
        lblDateChooserTO = new javax.swing.JLabel();
        dcDateTo = new com.toedter.calendar.JDateChooser();
        btnDisplayScreen = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblCompanyNameTransactionHistory.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lblCompanyNameTransactionHistory.setText("OBIJENCY FOOD STUFF");

        lblHeadingTransactionHistory.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblHeadingTransactionHistory.setText("TRANSACTION HISTORY");

        tblTransactionHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "TransactionID", "Timestamp", "Total Amount", "Amount Given", "Type"
            }
        ));
        jScrollPane1.setViewportView(tblTransactionHistory);

        btnTransactionhistoryMainMenu.setText("BACK TO MAIN MENU");
        btnTransactionhistoryMainMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTransactionhistoryMainMenuActionPerformed(evt);
            }
        });

        btnTransactionHistoryHelp.setText("HELP");
        btnTransactionHistoryHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTransactionHistoryHelpActionPerformed(evt);
            }
        });

        lblDateChooserFrom.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblDateChooserFrom.setText("DATE FROM:");

        lblSortAmount.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblSortAmount.setText("SORT BY TOTAL AMOUNT:");

        cmboSortAmount.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SELECT AN OPTION", "ASC", "DESC" }));
        cmboSortAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmboSortAmountActionPerformed(evt);
            }
        });

        lblDateChooserTO.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblDateChooserTO.setText("DATE TO:");

        btnDisplayScreen.setText("DISPLAY");
        btnDisplayScreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisplayScreenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(277, 277, 277)
                        .addComponent(lblHeadingTransactionHistory))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 675, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblSortAmount, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblDateChooserFrom, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblDateChooserTO, javax.swing.GroupLayout.Alignment.TRAILING)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnTransactionhistoryMainMenu)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cmboSortAmount, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(dcDateFrom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(dcDateTo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnDisplayScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(89, 89, 89)
                                .addComponent(btnTransactionHistoryHelp)))))
                .addContainerGap(20, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblCompanyNameTransactionHistory, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(134, 134, 134))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblCompanyNameTransactionHistory, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblHeadingTransactionHistory, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSortAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmboSortAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDateChooserFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dcDateFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblDateChooserTO, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(dcDateTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTransactionhistoryMainMenu)
                    .addComponent(btnTransactionHistoryHelp)
                    .addComponent(btnDisplayScreen))
                .addGap(43, 43, 43))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTransactionhistoryMainMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTransactionhistoryMainMenuActionPerformed
        MainMenu th = new MainMenu();
        th.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnTransactionhistoryMainMenuActionPerformed

    private void btnTransactionHistoryHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTransactionHistoryHelpActionPerformed
        HelpTransactionHistory hth = new HelpTransactionHistory();
        hth.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnTransactionHistoryHelpActionPerformed

    private void cmboSortAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmboSortAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmboSortAmountActionPerformed

    private void btnDisplayScreenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisplayScreenActionPerformed
        
        String date1 = ((JTextField)dcDateFrom.getDateEditor().getUiComponent()).getText();
        String date2 = ((JTextField)dcDateTo.getDateEditor().getUiComponent()).getText();
        String day1 = date1.substring(0, 2);
        String month1 = date1.substring(3, 6);
        String year1 = date1.substring(7, 11);
        
        String day2 = date2.substring(0, 2);
        String month2 = date2.substring(3, 6);
        String year2 = date2.substring(7, 11);
        switch(month1) {
            case "Jan":
                month1 = "01";
            break;

            case "Feb":
                month1 = "02";
            break;
                
            case "Mar":
                month1 = "03";
            break;

            case "Apr":
                month1 = "04";
            break;

            case "May":
                month1 = "05";
            break;

            case "Jun":
                month1 = "06";
            break;
        
            case "Jul":
                month1 = "07";
            break;
                
            case "Aug":
                month1 = "08";
            break;

            case "Sep":
                month1 = "09";
            break;

            case "Oct":
                month1 = "10";
            break;

            case "Nov":
                month1 = "11";
            break;
                
            case "Dec":
                month1 = "12";
            break;
                
            default:
                System.out.println("It is not a month");
            break;
            }
        
        String dates1 = year1 + month1 + day1 + "_000000";
        
        switch(month2) {
            case "Jan":
                month2 = "01";
            break;

            case "Feb":
                month2 = "02";
            break;
                
            case "Mar":
                month2 = "03";
            break;

            case "Apr":
                month2 = "04";
            break;

            case "May":
                month2 = "05";
            break;

            case "Jun":
                month2 = "06";
            break;
        
            case "Jul":
                month2 = "07";
            break;
                
            case "Aug":
                month2 = "08";
            break;

            case "Sep":
                month2 = "09";
            break;

            case "Oct":
                month2 = "10";
            break;

            case "Nov":
                month2 = "11";
            break;
                
            case "Dec":
                month2 = "12";
            break;
                
            default:
                System.out.println("It is not a month");
            break;
            }
        
        String dates2 = year2 + month2 + day2 + "_000000";
        
        
        
        DatabaseConnection dc = new DatabaseConnection();
        ResultSet rs = dc.displayBasedOnDateTransaction(dates1, dates2);
        tblTransactionHistory.setModel(DbUtils.resultSetToTableModel(rs));
        
        String opt = (String) cmboSortAmount.getSelectedItem();
        if(!(opt.equalsIgnoreCase("SELECT AN OPTION"))){
            ResultSet rc = dc.orderTransaction(opt);
            tblTransactionHistory.setModel(DbUtils.resultSetToTableModel(rc));
        }
    }//GEN-LAST:event_btnDisplayScreenActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TransactionHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TransactionHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TransactionHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TransactionHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TransactionHistory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDisplayScreen;
    private javax.swing.JButton btnTransactionHistoryHelp;
    private javax.swing.JButton btnTransactionhistoryMainMenu;
    private javax.swing.JComboBox cmboSortAmount;
    private com.toedter.calendar.JDateChooser dcDateFrom;
    private com.toedter.calendar.JDateChooser dcDateTo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCompanyNameTransactionHistory;
    private javax.swing.JLabel lblDateChooserFrom;
    private javax.swing.JLabel lblDateChooserTO;
    private javax.swing.JLabel lblHeadingTransactionHistory;
    private javax.swing.JLabel lblSortAmount;
    private javax.swing.JTable tblTransactionHistory;
    // End of variables declaration//GEN-END:variables
}
